/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * ligneeheros implementation : © <Your name here> <Your email address here>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * ligneeheros.css
 *
 * ligneeheros stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (ligneeheros_ligneeheros.tpl), and to HTML elements you create dynamically
    (in ligneeheros.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/


/* Note: you must not use any @import directive */


/********* You can start writing your CSS below this line: **********/

/********* Cards **********/
#deck-zone {
    text-align: center;
    margin: 1em auto;
}
.deck {
    background: url("img/cards.png") 0 0;
    background-size: auto 100%;
    width: 15%;
    max-width: 124px;
    aspect-ratio: 124 / 193;

    display: inline-block;
    position: relative;
    margin: auto 0.5em;
    cursor: pointer;
}
.deck:before, .deck:after {
    content: "";
    position: absolute;
    box-sizing: border-box;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: url("img/cards.png") 0 0;
    background-size: auto 100%;
}
.deck.large:before, .deck.large:after {
    background: url("img/big_cards.png") 0 0;
    background-size: auto 100%;
}
.deck:before {transform: translate(-3px, -3px);}
.deck:after {transform: translate(3px, 3px);}
.deck.large {
    background: url("img/big_cards.png") 0 0;
    background-size: auto 100%;
    width: 15%;
    max-width: 192px;
    aspect-ratio: 192 / 295;
}

.deck.lineage:after, .deck.lineage:before {background-position-x: 0;}
.deck.end_turn:after, .deck.end_turn:before {background-position-x: 57.1%;}
.deck.explore:after, .deck.explore:before {background-position-x: 43%;}
.deck.magic:after, .deck.magic:before {background-position-x: 14.3%;}
.deck.invention:after, .deck.invention:before {background-position-x: 0;}
.deck.objective:after, .deck.objective:before {background-position-x: 28.6%;}

.deck.disabled {display: none;}
.deck.inactive {cursor: not-allowed;}
.deck.lineage {
    display: none;
}
.deck.objective {
    display: none;
}
.deck.invention {margin-right: 2em;}
.deck.magic {}
.deck.explore {}
.deck.end_turn {float: right;}

.deck.flip {background-position-x: 0;}

.card_list {
    display: none;
}
.deck .deck_list:hover, .deck .deck_list:active {
    display: inline-block;
}
.counter {
    content: attr(data-count);
    position: absolute;
    font-weight: 700;
    height: 1em;
    width: 2em;
    bottom: .5em;
    right: .75em;
    color: #eee;
    text-align: right;
    z-index: 1;
    text-shadow: -1px 0 #000, 0 1px #000, 1px 0 #000, 0 -1px #000;
}


#city-zone {

}

/******** Icons *********/
.icon {
    display: inline-block;
    width: 32px;
    height: 32px;
    background: url("img/icons.png") 0 0 no-repeat;
    background-size: auto 100%;
}
.icon.large {
    width: 64px;
    height: 64px;
}
.icon.small {
    width: 16px;
    height: 16px;
}
.icon.cube.warrior {background-position: 0 0;}
.icon.cube.worker {background-position: 10% 0;}
.icon.cube.mage {background-position: 20% 0;}
.icon.cube.savant {background-position: 30% 0;}
.icon.cube.all {background-position: 40% 0;}
.icon.cube.monster {background-position: 50% 0;}
.icon.cube.city {background-position: 60% 0;}
.icon.cube.explore {background-position: 70% 0;}
.icon.cube.objective {background-position: 80% 0;}
.icon.cube.spell {background-position: 90% 0;}

/********* MAP **********/
#map-zone {
    width: 60%;
    min-width: 320px;
    margin: -8% 17.5% 0;
    transform: rotate(90deg);
}

@media all and (max-width: 720px) {
    #map-zone {
        max-width: 600px;
    }
}

.map-hex-grid {
    --amount: 7;
    --counter: 1
}

.map-hex-grid {
    position: relative;
    width: 100%;
    list-style-type: none;
    display: grid;
    grid-template-columns: repeat(var(--amount),1fr 2fr) 1fr;
}
.map-hex-item {
    position: relative;
    height: 0;
    padding-bottom: 90%;
    grid-column: 1/span 3;
    grid-row: calc(var(--counter) + var(--counter))/span 2;
    -webkit-filter: drop-shadow(0 0 3px rgba(68,68,68,.08));
    filter: drop-shadow(0 0 0.1em rgba(68,68,68,.08));
    margin: 0.1em 0.1em;
}
.map-hex-content {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    font-size: 1.125rem;
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
    -webkit-clip-path: polygon(75% 0,100% 50%,75% 100%,25% 100%,0 50%,25% 0);
    clip-path: polygon(75% 0,100% 50%,75% 100%,25% 100%,0 50%,25% 0);
    text-decoration: none;
    text-align: center;
    transition: transform .24s ease-out;
}

.map-hex-item:nth-of-type(7n+1) {
    grid-column: 1/span 3;
}
.map-hex-item:nth-of-type(7n+2) {
    grid-column: 3/span 3;
    grid-row: calc(var(--counter) + var(--counter) - 1)/span 2;
}
.map-hex-item:nth-of-type(7n+3) {
    grid-column: 5/span 3;
}
.map-hex-item:nth-of-type(7n+4) {
    grid-column: 7/span 3;
    grid-row: calc(var(--counter) + var(--counter) - 1)/span 2;
}
.map-hex-item:nth-of-type(7n+5) {
    grid-column: 9/span 3;
}
.map-hex-item:nth-of-type(7n+6) {
    grid-column: 11/span 3;
    grid-row: calc(var(--counter) + var(--counter) - 1)/span 2;
}
.map-hex-item:nth-of-type(7n+7) {
    grid-column: 13/span 3;
}

.map-hex-item:nth-of-type(n+8) {
    --counter: 2
}
.map-hex-item:nth-of-type(n+15) {
    --counter: 3
}
.map-hex-item:nth-of-type(n+22) {
    --counter: 4
}
.map-hex-item:nth-of-type(n+29) {
    --counter: 5
}
.map-hex-item:nth-of-type(n+36) {
    --counter: 6
}
.map-hex-item:nth-of-type(n+43) {
    --counter: 7
}

.tile {
    background: url('img/tile_sprites.png') no-repeat center #ece3cf;
    background-size: 70%;
    cursor: not-allowed;
}
.tile.tile_reveal {
    background: none;
}
.tile.explorable {
    cursor: pointer;
}
.tile.tile_reveal .map-dist-bg {
    display: none;
}
.tile.tile_disabled {display: none;}
.tile.tile_reveal.tile_town {background-color: brown;}
.tile.tile_reveal.tile_forest {background-color: forestgreen;}
.tile.tile_reveal.tile_mountain {background-color: grey;}
.tile.tile_reveal.tile_plain {background-color: mediumseagreen;}
.tile.tile_reveal.tile_desert {background-color: sandybrown;}
.tile.tile_reveal.tile_swamp {background-color: steelblue;}
.tile.tile_reveal.tile_hill {background-color: seagreen;}

.tile .map-dist-bg {
    position: absolute;
    top: calc(50% - 5%);
    left: 0.3em;
    width: 10%;
    height: 10%;
    background: #f6f2e9;
    transform: rotate(-135deg);
}
.tile .map-dist-bg label {
    display: inline-block;
    font-size: .75vw;
    color: #333;
    transform: rotate(45deg);
}
.tile .map-dist-bg label::before {
    content: attr(data-dist);
}

/*
    Example of CSS sprites (a black token and a white token, 20x20px each, embedded in the same "tokens.png" 40x20px image):

    .white_token {
        background-image: url('img/tokens.png');
        background-position: 0px 0px;
    }
    .black_token {
        background-image: url('img/tokens.png');
        background-position: -20px 0px;
    }
    .token {
        width: 20px;
        height: 20px;
        background-repeat: none;
    }
*/




